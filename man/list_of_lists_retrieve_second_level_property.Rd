% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lists_of_lists.R
\name{list_of_lists_retrieve_second_level_property}
\alias{list_of_lists_retrieve_second_level_property}
\title{Retrieve element from sublist of nested list}
\usage{
list_of_lists_retrieve_second_level_property(
  list_of_lists,
  name_of_property,
  function_for_sublist_assertion = function(x) {     return(TRUE) }
)
}
\arguments{
\item{list_of_lists}{A list containing at least one sublist lists (list)}

\item{name_of_property}{The name of the property to retrieve. For example if your sublists have some element named 'petal_length', you could use name_of_property == petal_lengt h (string)}

\item{function_for_sublist_assertion}{Some function that takes one argument (teach sublist) and returns TRUE/FALSE. Function is fed into an assertion. By default, no assertion is applied (function). This property is useful if you want to check all sublists are of a certain class.}
}
\value{
vector of the same length as the input list (vector)
}
\description{
Retrieve element from sublist of nested list
}
\details{
Will error if list is zero_length
}
\seealso{
Other nested_lists: 
\code{\link{is_list_of_lists}()}
}
\concept{nested_lists}
